{"version":3,"file":"static/js/509.5577ce14.chunk.js","mappings":"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","sources":["components/button/Button.js","components/loading/LoadingSkeleton.js","components/loading/MovieCardSkeleton.js","components/movie/MovieCard.js","config.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/loading/BannerSkeleton.js","components/banner/Banner.js","components/movie/MovieList.js","pages/HomePage.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({\r\n  onClick,\r\n  className = \"\",\r\n  type = \"button\",\r\n  bgColor = \"primary\",\r\n  children,\r\n  ...props\r\n}) => {\r\n  let bgClassName = \"bg-primary\";\r\n  switch (bgColor) {\r\n    case \"primary\":\r\n      bgClassName = \"bg-primary\";\r\n      break;\r\n    case \"secondary\":\r\n      bgClassName = \"bg-secondary\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={`px-6 py-3 rounded-lg text-white capitalize font-medium mt-auto ${bgClassName} ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst LoadingSkeleton = (props) => {\r\n  return (\r\n    <div\r\n      className={`skeleton ${props.className}`}\r\n      style={{\r\n        height: props.height,\r\n        width: props.width,\r\n        borderRadius: props.radius,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default LoadingSkeleton;\r\n","import React from \"react\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nconst MovieCardSkeleton = () => {\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-2xl p-3 bg-slate-800 text-white h-full select-none\">\r\n      <LoadingSkeleton className=\"w-full h-[250px] object-cover rounded-xl mb-5\"></LoadingSkeleton>\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3\">\r\n          <LoadingSkeleton className=\"w-full h-5\"></LoadingSkeleton>\r\n        </h3>\r\n\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10\">\r\n          <span>\r\n            <LoadingSkeleton className=\"w-10 h-3\"></LoadingSkeleton>\r\n          </span>\r\n          <span>\r\n            <LoadingSkeleton className=\"w-6 h-3\"></LoadingSkeleton>\r\n          </span>\r\n        </div>\r\n\r\n        <LoadingSkeleton className=\"w-full h-12 rounded-lg\"></LoadingSkeleton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCardSkeleton;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"../../config\";\r\nimport Button from \"../button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"movie-card flex flex-col rounded-2xl p-3 bg-slate-800 text-white h-full select-none\">\r\n      <img\r\n        src={tmdbAPI.imageW500(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-xl mb-5\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n        <h3 className=\"text-xl font-bold mb-3\">{title}</h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-50 mb-10\">\r\n          <span>{new Date(release_date).getFullYear()}</span>\r\n          <span>{vote_average}</span>\r\n        </div>\r\n        <Button\r\n          className=\"w-full\"\r\n          bgColor=\"primary\"\r\n          onClick={() => navigate(`/movies/${id}`)}\r\n        >\r\n          Watch now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  item: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n    release_date: PropTypes.string,\r\n    poster_path: PropTypes.string,\r\n    id: PropTypes.number,\r\n  }),\r\n};\r\nexport default MovieCard;\r\n","export const fetcher = (...args) => fetch(...args).then((res) => res.json());\r\nexport const apiKey = \"6e1723fb3ef14dae3303742c9589daa3\";\r\nconst tmdbEndpoint = \"https://api.themoviedb.org/3/movie\";\r\nconst tmdbEndpointSearch = \"https://api.themoviedb.org/3/search/movie\";\r\nexport const tmdbAPI = {\r\n  getMovieList: (type, page = 1) =>\r\n    `${tmdbEndpoint}/${type}?api_key=${apiKey}&page=${page}`,\r\n  getMovieDetails: (movieId) => `${tmdbEndpoint}/${movieId}?api_key=${apiKey}`,\r\n  getMovieMeta: (movieId, type) =>\r\n    `${tmdbEndpoint}/${movieId}/${type}?api_key=${apiKey}`,\r\n  getMovieSearch: (query, page) =>\r\n    `${tmdbEndpointSearch}?api_key=${apiKey}&query=${query}&page=${page}`,\r\n  getGenreMovie: () =>\r\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}`,\r\n  imageOriginal: (path) => `https://image.tmdb.org/t/p/original/${path}`,\r\n  imageW500: (path) => `https://image.tmdb.org/t/p/w500/${path}`,\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nconst BannerSkeleton = () => {\r\n  return (\r\n    <div className=\"w-full h-full rounded-2xl relative cursor-grab\">\r\n      <LoadingSkeleton className=\"w-full h-full object-cover rounded-2xl\"></LoadingSkeleton>\r\n      <div className=\"absolute left-5 bottom-5 w-full text-white\">\r\n        <h2 className=\"font-bold text-3xl mb-5\">\r\n          <LoadingSkeleton className=\"w-60 h-12\"></LoadingSkeleton>\r\n        </h2>\r\n\r\n        <div className=\"flex items-center gap-x-3 mb-8\">\r\n          <span>\r\n            <LoadingSkeleton className=\"w-20 h-10 rounded-lg\"></LoadingSkeleton>\r\n          </span>\r\n          <span>\r\n            <LoadingSkeleton className=\"w-20 h-10 rounded-lg\"></LoadingSkeleton>\r\n          </span>\r\n          <span>\r\n            <LoadingSkeleton className=\"w-20 h-10 rounded-lg\"></LoadingSkeleton>\r\n          </span>\r\n        </div>\r\n\r\n        <LoadingSkeleton className=\"w-32 h-12 rounded-lg\"></LoadingSkeleton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerSkeleton;\r\n","import React from \"react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../../config\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport \"swiper/scss\";\r\nimport Button from \"../button/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BannerSkeleton from \"../loading/BannerSkeleton\";\r\n\r\nconst Banner = () => {\r\n  const { data: genresData } = useSWR(tmdbAPI.getGenreMovie, fetcher);\r\n  const genres = genresData?.genres;\r\n\r\n  const { data, error } = useSWR(tmdbAPI.getMovieList(\"upcoming\"), fetcher);\r\n  const isLoading = !data && !error;\r\n  const movies = data?.results || {};\r\n\r\n  return (\r\n    <section className=\"banner h-[500px] mb-14 page-container overflow-hidden\">\r\n      {isLoading && <BannerSkeleton></BannerSkeleton>}\r\n\r\n      {!isLoading && (\r\n        <Swiper grabCursor={\"true\"} slidesPerView={\"auto\"}>\r\n          {movies.length > 0 &&\r\n            movies.map((item) => {\r\n              return (\r\n                <SwiperSlide key={item.id}>\r\n                  <BannerItem item={item} genres={genres}></BannerItem>\r\n                </SwiperSlide>\r\n              );\r\n            })}\r\n        </Swiper>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst BannerItem = ({ item, genres }) => {\r\n  const navigate = useNavigate();\r\n  const { title, backdrop_path, id, genre_ids } = item;\r\n\r\n  return (\r\n    <div className=\"w-full h-full rounded-2xl relative cursor-grab\">\r\n      <div className=\"overlay absolute inset-0 bg-gradient-to-t from-[rgba(0,0,0,0.7)] to-[rgba(0,0,0,0.3)] rounded-2xl\"></div>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\r\n        alt=\"\"\r\n        className=\"w-full h-full object-cover rounded-2xl object-top\"\r\n      />\r\n      <div className=\"absolute left-5 bottom-5 w-full text-white\">\r\n        <h2 className=\"font-bold text-3xl mb-5\">{title}</h2>\r\n\r\n        <GenresDetailsMovie\r\n          genre_ids={genre_ids}\r\n          genres={genres}\r\n        ></GenresDetailsMovie>\r\n\r\n        <Button bgColor=\"primary\" onClick={() => navigate(`/movies/${id}`)}>\r\n          Watch now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GenresDetailsMovie = ({ genre_ids, genres }) => {\r\n  const genresArray = [];\r\n  for (const genreId of genre_ids) {\r\n    for (const genre of genres) {\r\n      if (genreId === genre.id) {\r\n        genresArray.push(genre.name);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"flex items-center gap-x-3 mb-8\">\r\n      {genresArray.map((item, index) => (\r\n        <span key={index} className=\"px-4 py-2 border border-white rounded-md\">\r\n          {item}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport \"swiper/scss\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../../config\";\r\nimport PropTypes from \"prop-types\";\r\nimport MovieCardSkeleton from \"../loading/MovieCardSkeleton\";\r\n\r\nconst MovieList = ({ type }) => {\r\n  const { data, error } = useSWR(tmdbAPI.getMovieList(type), fetcher);\r\n  const isLoading = !data && !error;\r\n  const movies = data?.results || [];\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {isLoading && (\r\n        <>\r\n          <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n              <MovieCardSkeleton></MovieCardSkeleton>\r\n            </SwiperSlide>\r\n          </Swiper>\r\n        </>\r\n      )}\r\n\r\n      {!isLoading && (\r\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n          {movies.length > 0 &&\r\n            movies.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { Fragment } from \"react\";\r\nimport Banner from \"../components/banner/Banner\";\r\nimport MovieList from \"../components/movie/MovieList\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Banner></Banner>\r\n      <section className=\"movies-layout pb-14 page-container\">\r\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\r\n          Now playing\r\n        </h2>\r\n        <MovieList type=\"now_playing\"></MovieList>\r\n      </section>\r\n      <section className=\"movies-layout pb-14 page-container\">\r\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\r\n          Top rated movies\r\n        </h2>\r\n        <MovieList type=\"top_rated\"></MovieList>\r\n      </section>\r\n      <section className=\"movies-layout pb-14 page-container\">\r\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\r\n          Trending\r\n        </h2>\r\n        <MovieList type=\"popular\"></MovieList>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["onClick","className","type","bgColor","children","props","bgClassName","style","height","width","borderRadius","radius","item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","src","tmdbAPI","alt","Date","getFullYear","fetcher","fetch","then","res","json","apiKey","tmdbEndpoint","getMovieList","page","getMovieDetails","movieId","getMovieMeta","getMovieSearch","query","getGenreMovie","imageOriginal","path","imageW500","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","LoadingSkeleton","BannerItem","genres","backdrop_path","genre_ids","GenresDetailsMovie","Button","genresArray","genreId","genre","push","name","map","index","genresData","useSWR","data","error","isLoading","movies","results","grabCursor","slidesPerView","spaceBetween","MovieCardSkeleton","MovieCard","Fragment"],"sourceRoot":""}